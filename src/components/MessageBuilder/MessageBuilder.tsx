import { useEffect, useState } from "react";
import { formatNumber } from "../../helpers/formatNumber";

function MessageBuilder({ stackData }: any) {
  const [message, setMessage]: any = useState("");
  const [discordTag, setDiscordTag]: any = useState("");
  const [startDate, setStartDate]: any = useState("");
  const [endDate, setEndDate]: any = useState("");

  const stackTypeMessage = `${
    Object.keys(stackData.type).length > 1 ? "Split Stack" : "Single"
  } - (${Object.keys(stackData.type)
    .map((key: any) => `${key}: ${stackData.type[key]}`)
    .join(", ")})`;

  const formatMessage = () => {
    const msg = `
${
  discordTag ? discordTag : "{DISCORD_TAG}"
} Hey commanders! I have a stack that is completed and ready for sharing.
I am available between ${startDate ? startDate : "{START_DATE}"} and ${
      endDate ? endDate : "{END_DATE}"
    }.

**Details:**
Stack Size: ${stackData.size}
Stack Value: ${formatNumber(stackData.value)}
Stack Type: ${stackTypeMessage}

Generated by Trakkr
    `;

    setMessage(msg);
  };

  const onDiscordTagChange = (e: any) => {
    setDiscordTag(e.target.value);
  };

  const onStartDateChange = (e: any) => {
    setStartDate(e.target.value);
  };

  const onEndDateChange = (e: any) => {
    setEndDate(e.target.value);
  };

  useEffect(() => {
    console.log("stackdata: ", stackData);
    formatMessage();
  }, [discordTag]);

  return (
    <div className="MessageBuilder flex gap-3">
      <div className="w-4">
        <div className="flex flex-column uppercase my-2">
          <label>Discord Tag</label>
          <input
            name="startDate"
            value={discordTag}
            onChange={onDiscordTagChange}
            placeholder="@LFW-WMM"
            className="p-3 my-1"
          />
        </div>
        <div className="flex flex-column uppercase my-2">
          <label>Share Date</label>
          <input
            type="date"
            name="startDate"
            value={startDate}
            onChange={onStartDateChange}
            className="p-3 my-1"
          />
        </div>
        <div className="flex flex-column uppercase my-2">
          <label>End Date</label>
          <input
            type="date"
            name="endDate"
            value={endDate}
            onChange={onEndDateChange}
            className="p-3 my-1"
          />
        </div>
      </div>
      <div className="w-8">
        <div className="flex flex-column uppercase my-2">
          <label>My Message</label>
          <textarea
            className="w-full p-3 my-1"
            rows={15}
            value={message}
          ></textarea>
        </div>
      </div>
    </div>
  );
}

export default MessageBuilder;
